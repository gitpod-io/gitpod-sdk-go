// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: gitpod/v1/editor.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/gitpod-io/flex-sdk-go/tools/logfields"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListEditorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination contains the pagination options for listing environments
	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListEditorsRequest) Reset() {
	*x = ListEditorsRequest{}
	mi := &file_gitpod_v1_editor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEditorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEditorsRequest) ProtoMessage() {}

func (x *ListEditorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEditorsRequest.ProtoReflect.Descriptor instead.
func (*ListEditorsRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{0}
}

func (x *ListEditorsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListEditorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// editors contains the list of editors
	Editors []*Editor `protobuf:"bytes,1,rep,name=editors,proto3" json:"editors,omitempty"`
	// pagination contains the pagination options for listing environments
	Pagination *PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListEditorsResponse) Reset() {
	*x = ListEditorsResponse{}
	mi := &file_gitpod_v1_editor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEditorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEditorsResponse) ProtoMessage() {}

func (x *ListEditorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEditorsResponse.ProtoReflect.Descriptor instead.
func (*ListEditorsResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{1}
}

func (x *ListEditorsResponse) GetEditors() []*Editor {
	if x != nil {
		return x.Editors
	}
	return nil
}

func (x *ListEditorsResponse) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetEditorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the ID of the editor to get
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEditorRequest) Reset() {
	*x = GetEditorRequest{}
	mi := &file_gitpod_v1_editor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEditorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditorRequest) ProtoMessage() {}

func (x *GetEditorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditorRequest.ProtoReflect.Descriptor instead.
func (*GetEditorRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{2}
}

func (x *GetEditorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEditorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// editor contains the editor
	Editor *Editor `protobuf:"bytes,1,opt,name=editor,proto3" json:"editor,omitempty"`
}

func (x *GetEditorResponse) Reset() {
	*x = GetEditorResponse{}
	mi := &file_gitpod_v1_editor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEditorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditorResponse) ProtoMessage() {}

func (x *GetEditorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditorResponse.ProtoReflect.Descriptor instead.
func (*GetEditorResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{3}
}

func (x *GetEditorResponse) GetEditor() *Editor {
	if x != nil {
		return x.Editor
	}
	return nil
}

type ResolveEditorURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// editorId is the ID of the editor to resolve the URL for
	EditorId string `protobuf:"bytes,1,opt,name=editor_id,json=editorId,proto3" json:"editor_id,omitempty"`
	// environmentId is the ID of the environment to resolve the URL for
	EnvironmentId string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// organizationId is the ID of the organization to resolve the URL for
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *ResolveEditorURLRequest) Reset() {
	*x = ResolveEditorURLRequest{}
	mi := &file_gitpod_v1_editor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveEditorURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveEditorURLRequest) ProtoMessage() {}

func (x *ResolveEditorURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveEditorURLRequest.ProtoReflect.Descriptor instead.
func (*ResolveEditorURLRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{4}
}

func (x *ResolveEditorURLRequest) GetEditorId() string {
	if x != nil {
		return x.EditorId
	}
	return ""
}

func (x *ResolveEditorURLRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ResolveEditorURLRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type ResolveEditorURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// url is the resolved editor URL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ResolveEditorURLResponse) Reset() {
	*x = ResolveEditorURLResponse{}
	mi := &file_gitpod_v1_editor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveEditorURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveEditorURLResponse) ProtoMessage() {}

func (x *ResolveEditorURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveEditorURLResponse.ProtoReflect.Descriptor instead.
func (*ResolveEditorURLResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{5}
}

func (x *ResolveEditorURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Editor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShortDescription         string `protobuf:"bytes,3,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	InstallationInstructions string `protobuf:"bytes,4,opt,name=installation_instructions,json=installationInstructions,proto3" json:"installation_instructions,omitempty"`
	IconUrl                  string `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	UrlTemplate              string `protobuf:"bytes,6,opt,name=url_template,json=urlTemplate,proto3" json:"url_template,omitempty"`
}

func (x *Editor) Reset() {
	*x = Editor{}
	mi := &file_gitpod_v1_editor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Editor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Editor) ProtoMessage() {}

func (x *Editor) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Editor.ProtoReflect.Descriptor instead.
func (*Editor) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{6}
}

func (x *Editor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Editor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Editor) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Editor) GetInstallationInstructions() string {
	if x != nil {
		return x.InstallationInstructions
	}
	return ""
}

func (x *Editor) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Editor) GetUrlTemplate() string {
	if x != nil {
		return x.UrlTemplate
	}
	return ""
}

var File_gitpod_v1_editor_proto protoreflect.FileDescriptor

var file_gitpod_v1_editor_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x69, 0x74,
	0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x69, 0x74,
	0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xa2, 0xab, 0x1e, 0x0b, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x2e, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x22, 0xdc, 0x01, 0x0a, 0x17, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0xa2, 0xab, 0x1e, 0x0b, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x69,
	0x64, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1c, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0xa2, 0xab, 0x1e,
	0x10, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x69,
	0x64, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x46, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xba, 0x48, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0xa2, 0xab, 0x1e, 0x11, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x69, 0x64, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xe5, 0x01, 0x0a, 0x06, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xa2,
	0xab, 0x1e, 0x0b, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x69, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x19, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x72, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x72, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x32, 0x8e,
	0x02, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x51, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x1d, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03,
	0x90, 0x02, 0x01, 0x12, 0x4b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x12, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01,
	0x12, 0x5d, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x55, 0x52, 0x4c, 0x12, 0x22, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2d, 0x6e,
	0x65, 0x78, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitpod_v1_editor_proto_rawDescOnce sync.Once
	file_gitpod_v1_editor_proto_rawDescData = file_gitpod_v1_editor_proto_rawDesc
)

func file_gitpod_v1_editor_proto_rawDescGZIP() []byte {
	file_gitpod_v1_editor_proto_rawDescOnce.Do(func() {
		file_gitpod_v1_editor_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitpod_v1_editor_proto_rawDescData)
	})
	return file_gitpod_v1_editor_proto_rawDescData
}

var file_gitpod_v1_editor_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_gitpod_v1_editor_proto_goTypes = []any{
	(*ListEditorsRequest)(nil),       // 0: gitpod.v1.ListEditorsRequest
	(*ListEditorsResponse)(nil),      // 1: gitpod.v1.ListEditorsResponse
	(*GetEditorRequest)(nil),         // 2: gitpod.v1.GetEditorRequest
	(*GetEditorResponse)(nil),        // 3: gitpod.v1.GetEditorResponse
	(*ResolveEditorURLRequest)(nil),  // 4: gitpod.v1.ResolveEditorURLRequest
	(*ResolveEditorURLResponse)(nil), // 5: gitpod.v1.ResolveEditorURLResponse
	(*Editor)(nil),                   // 6: gitpod.v1.Editor
	(*PaginationRequest)(nil),        // 7: gitpod.v1.PaginationRequest
}
var file_gitpod_v1_editor_proto_depIdxs = []int32{
	7, // 0: gitpod.v1.ListEditorsRequest.pagination:type_name -> gitpod.v1.PaginationRequest
	6, // 1: gitpod.v1.ListEditorsResponse.editors:type_name -> gitpod.v1.Editor
	7, // 2: gitpod.v1.ListEditorsResponse.pagination:type_name -> gitpod.v1.PaginationRequest
	6, // 3: gitpod.v1.GetEditorResponse.editor:type_name -> gitpod.v1.Editor
	0, // 4: gitpod.v1.EditorService.ListEditors:input_type -> gitpod.v1.ListEditorsRequest
	2, // 5: gitpod.v1.EditorService.GetEditor:input_type -> gitpod.v1.GetEditorRequest
	4, // 6: gitpod.v1.EditorService.ResolveEditorURL:input_type -> gitpod.v1.ResolveEditorURLRequest
	1, // 7: gitpod.v1.EditorService.ListEditors:output_type -> gitpod.v1.ListEditorsResponse
	3, // 8: gitpod.v1.EditorService.GetEditor:output_type -> gitpod.v1.GetEditorResponse
	5, // 9: gitpod.v1.EditorService.ResolveEditorURL:output_type -> gitpod.v1.ResolveEditorURLResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_gitpod_v1_editor_proto_init() }
func file_gitpod_v1_editor_proto_init() {
	if File_gitpod_v1_editor_proto != nil {
		return
	}
	file_gitpod_v1_pagination_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitpod_v1_editor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitpod_v1_editor_proto_goTypes,
		DependencyIndexes: file_gitpod_v1_editor_proto_depIdxs,
		MessageInfos:      file_gitpod_v1_editor_proto_msgTypes,
	}.Build()
	File_gitpod_v1_editor_proto = out.File
	file_gitpod_v1_editor_proto_rawDesc = nil
	file_gitpod_v1_editor_proto_goTypes = nil
	file_gitpod_v1_editor_proto_depIdxs = nil
}
