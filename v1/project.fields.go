// Code generated by gitpod-log-fields. DO NOT EDIT.

package v1

import (
	logfields "github.com/gitpod-io/flex-sdk-go/tools/logfields"
)

func (x *CreateProjectRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetInitializer())...)
	fields.Add(logfields.Extract(x.GetEnvironmentClass())...)
	return fields
}

func (x *CreateProjectResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetProject())...)
	return fields
}

func (x *CreateProjectFromEnvironmentRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "environment.id", Value: x.EnvironmentId})
	return fields
}

func (x *CreateProjectFromEnvironmentResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetProject())...)
	return fields
}

func (x *GetProjectRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "project.id", Value: x.ProjectId})
	return fields
}

func (x *GetProjectResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetProject())...)
	return fields
}

func (x *UpdateProjectRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "project.id", Value: x.ProjectId})
	fields.Add(logfields.Extract(x.GetEnvironmentClass())...)
	fields.Add(logfields.Extract(x.GetInitializer())...)
	return fields
}

func (x *UpdateProjectResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetProject())...)
	return fields
}

func (x *ListProjectsRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *ListProjectsResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *DeleteProjectRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "project.id", Value: x.ProjectId})
	return fields
}

func (x *DeleteProjectResponse) LogFields() logfields.Collection {
	return nil
}

func (x *ListProjectPoliciesRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	fields.Add(&logfields.Entry{Name: "project.id", Value: x.ProjectId})
	return fields
}

func (x *ListProjectPoliciesResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *CreateProjectPolicyRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "project.id", Value: x.ProjectId})
	fields.Add(&logfields.Entry{Name: "group.id", Value: x.GroupId})
	return fields
}

func (x *CreateProjectPolicyResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPolicy())...)
	return fields
}

func (x *UpdateProjectPolicyRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "project.id", Value: x.ProjectId})
	fields.Add(&logfields.Entry{Name: "group.id", Value: x.GroupId})
	return fields
}

func (x *UpdateProjectPolicyResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPolicy())...)
	return fields
}

func (x *DeleteProjectPolicyRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "project.id", Value: x.ProjectId})
	fields.Add(&logfields.Entry{Name: "group.id", Value: x.GroupId})
	return fields
}

func (x *DeleteProjectPolicyResponse) LogFields() logfields.Collection {
	return nil
}

func (x *Project) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "project.id", Value: x.Id})
	fields.Add(logfields.Extract(x.GetMetadata())...)
	fields.Add(logfields.Extract(x.GetInitializer())...)
	fields.Add(logfields.Extract(x.GetEnvironmentClass())...)
	fields.Add(logfields.Extract(x.GetUsedBy())...)
	return fields
}

func (x *ProjectEnvironmentClass) LogFields() logfields.Collection {
	return nil
}

func (x *ProjectMetadata) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "organization.id", Value: x.OrganizationId})
	fields.Add(logfields.Extract(x.GetCreator())...)
	fields.Add(logfields.Extract(x.GetCreatedAt())...)
	fields.Add(logfields.Extract(x.GetUpdatedAt())...)
	return fields
}

func (x *ProjectPolicy) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "group.id", Value: x.GroupId})
	return fields
}
