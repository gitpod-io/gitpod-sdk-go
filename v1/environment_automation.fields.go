// Code generated by gitpod-log-fields. DO NOT EDIT.

package v1

import (
	logfields "github.com/gitpod-io/flex-go/tools/logfields"
)

func (x *ServiceMetadata) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetCreatedAt())...)
	fields.Add(logfields.Extract(x.GetCreator())...)
	return fields
}

func (x *ServiceSpec) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetCommands())...)
	fields.Add(logfields.Extract(x.GetRunsOn())...)
	return fields
}

func (x *ServiceStatus) LogFields() logfields.Collection {
	return nil
}

func (x *Service) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "service.id", Value: x.Id})
	fields.Add(&logfields.Entry{Name: "environment.id", Value: x.EnvironmentId})
	fields.Add(logfields.Extract(x.GetMetadata())...)
	fields.Add(logfields.Extract(x.GetSpec())...)
	fields.Add(logfields.Extract(x.GetStatus())...)
	return fields
}

func (x *CreateServiceRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "environment.id", Value: x.EnvironmentId})
	fields.Add(logfields.Extract(x.GetMetadata())...)
	fields.Add(logfields.Extract(x.GetSpec())...)
	return fields
}

func (x *CreateServiceResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetService())...)
	return fields
}

func (x *GetServiceRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "service.id", Value: x.Id})
	return fields
}

func (x *GetServiceResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetService())...)
	return fields
}

func (x *ListServicesRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	fields.Add(logfields.Extract(x.GetFilter())...)
	return fields
}

func (x *ListServicesResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *UpdateServiceRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "service.id", Value: x.Id})
	fields.Add(logfields.Extract(x.GetMetadata())...)
	fields.Add(logfields.Extract(x.GetSpec())...)
	fields.Add(logfields.Extract(x.GetStatus())...)
	return fields
}

func (x *UpdateServiceResponse) LogFields() logfields.Collection {
	return nil
}

func (x *DeleteServiceRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "service.id", Value: x.Id})
	return fields
}

func (x *DeleteServiceResponse) LogFields() logfields.Collection {
	return nil
}

func (x *StartServiceRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "service.id", Value: x.Id})
	return fields
}

func (x *StartServiceResponse) LogFields() logfields.Collection {
	return nil
}

func (x *StopServiceRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "service.id", Value: x.Id})
	return fields
}

func (x *StopServiceResponse) LogFields() logfields.Collection {
	return nil
}

func (x *UpsertAutomationsFileRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "environment.id", Value: x.EnvironmentId})
	fields.Add(logfields.Extract(x.GetAutomationsFile())...)
	return fields
}

func (x *UpsertAutomationsFileResponse) LogFields() logfields.Collection {
	return nil
}

func (x *AutomationsFile) LogFields() logfields.Collection {
	return nil
}

func (x *CreateTaskRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "environment.id", Value: x.EnvironmentId})
	fields.Add(logfields.Extract(x.GetMetadata())...)
	fields.Add(logfields.Extract(x.GetSpec())...)
	return fields
}

func (x *CreateTaskResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetTask())...)
	return fields
}

func (x *GetTaskRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task.id", Value: x.Id})
	return fields
}

func (x *GetTaskResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetTask())...)
	return fields
}

func (x *ListTasksRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	fields.Add(logfields.Extract(x.GetFilter())...)
	return fields
}

func (x *ListTasksResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *UpdateTaskRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task.id", Value: x.Id})
	fields.Add(logfields.Extract(x.GetMetadata())...)
	fields.Add(logfields.Extract(x.GetSpec())...)
	return fields
}

func (x *UpdateTaskResponse) LogFields() logfields.Collection {
	return nil
}

func (x *DeleteTaskRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task.id", Value: x.Id})
	return fields
}

func (x *DeleteTaskResponse) LogFields() logfields.Collection {
	return nil
}

func (x *StartTaskRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task.id", Value: x.Id})
	return fields
}

func (x *StartTaskResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetTaskExecution())...)
	return fields
}

func (x *ListTaskExecutionsRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	fields.Add(logfields.Extract(x.GetFilter())...)
	return fields
}

func (x *ListTaskExecutionsResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *GetTaskExecutionRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task_execution.id", Value: x.Id})
	return fields
}

func (x *GetTaskExecutionResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetTaskExecution())...)
	return fields
}

func (x *StopTaskExecutionRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task_execution.id", Value: x.Id})
	return fields
}

func (x *StopTaskExecutionResponse) LogFields() logfields.Collection {
	return nil
}

func (x *UpdateTaskExecutionStatusRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task_execution.id", Value: x.Id})
	return fields
}

func (x *UpdateTaskExecutionStatusResponse) LogFields() logfields.Collection {
	return nil
}

func (x *TaskMetadata) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetCreatedAt())...)
	fields.Add(logfields.Extract(x.GetCreator())...)
	return fields
}

func (x *TaskSpec) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetRunsOn())...)
	return fields
}

func (x *Task) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task.id", Value: x.Id})
	fields.Add(&logfields.Entry{Name: "environment.id", Value: x.EnvironmentId})
	fields.Add(logfields.Extract(x.GetMetadata())...)
	fields.Add(logfields.Extract(x.GetSpec())...)
	return fields
}

func (x *RunsOn) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetDocker())...)
	return fields
}

func (x *TaskExecution) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task_execution.id", Value: x.Id})
	fields.Add(logfields.Extract(x.GetMetadata())...)
	fields.Add(logfields.Extract(x.GetSpec())...)
	fields.Add(logfields.Extract(x.GetStatus())...)
	return fields
}

func (x *TaskExecutionMetadata) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "task.id", Value: x.TaskId})
	fields.Add(&logfields.Entry{Name: "environment.id", Value: x.EnvironmentId})
	fields.Add(logfields.Extract(x.GetCreatedAt())...)
	fields.Add(logfields.Extract(x.GetCreator())...)
	fields.Add(logfields.Extract(x.GetStartedAt())...)
	fields.Add(logfields.Extract(x.GetCompletedAt())...)
	return fields
}

func (x *TaskExecutionSpec) LogFields() logfields.Collection {
	return nil
}

func (x *TaskExecutionStatus) LogFields() logfields.Collection {
	return nil
}

func (x *AutomationTrigger) LogFields() logfields.Collection {
	return nil
}
