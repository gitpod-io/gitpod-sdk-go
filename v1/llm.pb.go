// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: gitpod/v1/llm.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InvokeModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Input:
	//
	//	*InvokeModelRequest_AnthropicRequest
	Input isInvokeModelRequest_Input `protobuf_oneof:"input"`
}

func (x *InvokeModelRequest) Reset() {
	*x = InvokeModelRequest{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeModelRequest) ProtoMessage() {}

func (x *InvokeModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeModelRequest.ProtoReflect.Descriptor instead.
func (*InvokeModelRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{0}
}

func (m *InvokeModelRequest) GetInput() isInvokeModelRequest_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *InvokeModelRequest) GetAnthropicRequest() *AnthropicRequest {
	if x, ok := x.GetInput().(*InvokeModelRequest_AnthropicRequest); ok {
		return x.AnthropicRequest
	}
	return nil
}

type isInvokeModelRequest_Input interface {
	isInvokeModelRequest_Input()
}

type InvokeModelRequest_AnthropicRequest struct {
	AnthropicRequest *AnthropicRequest `protobuf:"bytes,1,opt,name=anthropic_request,json=anthropicRequest,proto3,oneof"`
}

func (*InvokeModelRequest_AnthropicRequest) isInvokeModelRequest_Input() {}

type InvokeModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Output:
	//
	//	*InvokeModelResponse_AnthropicResponse
	Output isInvokeModelResponse_Output `protobuf_oneof:"output"`
}

func (x *InvokeModelResponse) Reset() {
	*x = InvokeModelResponse{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeModelResponse) ProtoMessage() {}

func (x *InvokeModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeModelResponse.ProtoReflect.Descriptor instead.
func (*InvokeModelResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{1}
}

func (m *InvokeModelResponse) GetOutput() isInvokeModelResponse_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (x *InvokeModelResponse) GetAnthropicResponse() *AnthropicResponse {
	if x, ok := x.GetOutput().(*InvokeModelResponse_AnthropicResponse); ok {
		return x.AnthropicResponse
	}
	return nil
}

type isInvokeModelResponse_Output interface {
	isInvokeModelResponse_Output()
}

type InvokeModelResponse_AnthropicResponse struct {
	AnthropicResponse *AnthropicResponse `protobuf:"bytes,1,opt,name=anthropic_response,json=anthropicResponse,proto3,oneof"`
}

func (*InvokeModelResponse_AnthropicResponse) isInvokeModelResponse_Output() {}

type AnthropicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTokens   int32                    `protobuf:"varint,2,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	Temperature float64                  `protobuf:"fixed64,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Messages    []*AnthropicMessage      `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
	Tools       []*AnthropicRequest_Tool `protobuf:"bytes,5,rep,name=tools,proto3" json:"tools,omitempty"`
	ToolChoice  map[string]string        `protobuf:"bytes,6,rep,name=tool_choice,json=toolChoice,proto3" json:"tool_choice,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AnthropicRequest) Reset() {
	*x = AnthropicRequest{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicRequest) ProtoMessage() {}

func (x *AnthropicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicRequest.ProtoReflect.Descriptor instead.
func (*AnthropicRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{2}
}

func (x *AnthropicRequest) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *AnthropicRequest) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *AnthropicRequest) GetMessages() []*AnthropicMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *AnthropicRequest) GetTools() []*AnthropicRequest_Tool {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *AnthropicRequest) GetToolChoice() map[string]string {
	if x != nil {
		return x.ToolChoice
	}
	return nil
}

type AnthropicMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    string                      `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content []*AnthropicMessage_Content `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *AnthropicMessage) Reset() {
	*x = AnthropicMessage{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicMessage) ProtoMessage() {}

func (x *AnthropicMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicMessage.ProtoReflect.Descriptor instead.
func (*AnthropicMessage) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{3}
}

func (x *AnthropicMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AnthropicMessage) GetContent() []*AnthropicMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

type AnthropicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type       string                      `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Role       string                      `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Model      string                      `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Content    []*AnthropicMessage_Content `protobuf:"bytes,5,rep,name=content,proto3" json:"content,omitempty"`
	StopReason string                      `protobuf:"bytes,6,opt,name=stop_reason,json=stopReason,proto3" json:"stop_reason,omitempty"`
	Timestamp  *timestamppb.Timestamp      `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *AnthropicResponse) Reset() {
	*x = AnthropicResponse{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicResponse) ProtoMessage() {}

func (x *AnthropicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicResponse.ProtoReflect.Descriptor instead.
func (*AnthropicResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{4}
}

func (x *AnthropicResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AnthropicResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnthropicResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AnthropicResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AnthropicResponse) GetContent() []*AnthropicMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *AnthropicResponse) GetStopReason() string {
	if x != nil {
		return x.StopReason
	}
	return ""
}

func (x *AnthropicResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AnthropicRequest_Tool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	InputSchema *AnthropicRequest_Tool_InputSchema `protobuf:"bytes,3,opt,name=input_schema,json=inputSchema,proto3" json:"input_schema,omitempty"`
}

func (x *AnthropicRequest_Tool) Reset() {
	*x = AnthropicRequest_Tool{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicRequest_Tool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicRequest_Tool) ProtoMessage() {}

func (x *AnthropicRequest_Tool) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicRequest_Tool.ProtoReflect.Descriptor instead.
func (*AnthropicRequest_Tool) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AnthropicRequest_Tool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnthropicRequest_Tool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AnthropicRequest_Tool) GetInputSchema() *AnthropicRequest_Tool_InputSchema {
	if x != nil {
		return x.InputSchema
	}
	return nil
}

type AnthropicRequest_Tool_InputSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string                                        `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Required    []string                                      `protobuf:"bytes,2,rep,name=required,proto3" json:"required,omitempty"`
	Description string                                        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Properties  map[string]*AnthropicRequest_Tool_InputSchema `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Items       *AnthropicRequest_Tool_InputSchema            `protobuf:"bytes,5,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *AnthropicRequest_Tool_InputSchema) Reset() {
	*x = AnthropicRequest_Tool_InputSchema{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicRequest_Tool_InputSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicRequest_Tool_InputSchema) ProtoMessage() {}

func (x *AnthropicRequest_Tool_InputSchema) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicRequest_Tool_InputSchema.ProtoReflect.Descriptor instead.
func (*AnthropicRequest_Tool_InputSchema) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *AnthropicRequest_Tool_InputSchema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnthropicRequest_Tool_InputSchema) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

func (x *AnthropicRequest_Tool_InputSchema) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AnthropicRequest_Tool_InputSchema) GetProperties() map[string]*AnthropicRequest_Tool_InputSchema {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *AnthropicRequest_Tool_InputSchema) GetItems() *AnthropicRequest_Tool_InputSchema {
	if x != nil {
		return x.Items
	}
	return nil
}

type AnthropicMessage_ContentText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *AnthropicMessage_ContentText) Reset() {
	*x = AnthropicMessage_ContentText{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicMessage_ContentText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicMessage_ContentText) ProtoMessage() {}

func (x *AnthropicMessage_ContentText) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicMessage_ContentText.ProtoReflect.Descriptor instead.
func (*AnthropicMessage_ContentText) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AnthropicMessage_ContentText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type AnthropicMessage_ContentToolUse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Input *structpb.Struct `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *AnthropicMessage_ContentToolUse) Reset() {
	*x = AnthropicMessage_ContentToolUse{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicMessage_ContentToolUse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicMessage_ContentToolUse) ProtoMessage() {}

func (x *AnthropicMessage_ContentToolUse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicMessage_ContentToolUse.ProtoReflect.Descriptor instead.
func (*AnthropicMessage_ContentToolUse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{3, 1}
}

func (x *AnthropicMessage_ContentToolUse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AnthropicMessage_ContentToolUse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnthropicMessage_ContentToolUse) GetInput() *structpb.Struct {
	if x != nil {
		return x.Input
	}
	return nil
}

type AnthropicMessage_ContentToolResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Output  string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	IsError bool   `protobuf:"varint,3,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
}

func (x *AnthropicMessage_ContentToolResult) Reset() {
	*x = AnthropicMessage_ContentToolResult{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicMessage_ContentToolResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicMessage_ContentToolResult) ProtoMessage() {}

func (x *AnthropicMessage_ContentToolResult) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicMessage_ContentToolResult.ProtoReflect.Descriptor instead.
func (*AnthropicMessage_ContentToolResult) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{3, 2}
}

func (x *AnthropicMessage_ContentToolResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AnthropicMessage_ContentToolResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *AnthropicMessage_ContentToolResult) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

type AnthropicMessage_Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*AnthropicMessage_Content_Text
	//	*AnthropicMessage_Content_ToolUse
	//	*AnthropicMessage_Content_ToolResult
	Content isAnthropicMessage_Content_Content `protobuf_oneof:"content"`
}

func (x *AnthropicMessage_Content) Reset() {
	*x = AnthropicMessage_Content{}
	mi := &file_gitpod_v1_llm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicMessage_Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicMessage_Content) ProtoMessage() {}

func (x *AnthropicMessage_Content) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_llm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicMessage_Content.ProtoReflect.Descriptor instead.
func (*AnthropicMessage_Content) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_llm_proto_rawDescGZIP(), []int{3, 3}
}

func (m *AnthropicMessage_Content) GetContent() isAnthropicMessage_Content_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *AnthropicMessage_Content) GetText() *AnthropicMessage_ContentText {
	if x, ok := x.GetContent().(*AnthropicMessage_Content_Text); ok {
		return x.Text
	}
	return nil
}

func (x *AnthropicMessage_Content) GetToolUse() *AnthropicMessage_ContentToolUse {
	if x, ok := x.GetContent().(*AnthropicMessage_Content_ToolUse); ok {
		return x.ToolUse
	}
	return nil
}

func (x *AnthropicMessage_Content) GetToolResult() *AnthropicMessage_ContentToolResult {
	if x, ok := x.GetContent().(*AnthropicMessage_Content_ToolResult); ok {
		return x.ToolResult
	}
	return nil
}

type isAnthropicMessage_Content_Content interface {
	isAnthropicMessage_Content_Content()
}

type AnthropicMessage_Content_Text struct {
	Text *AnthropicMessage_ContentText `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type AnthropicMessage_Content_ToolUse struct {
	ToolUse *AnthropicMessage_ContentToolUse `protobuf:"bytes,2,opt,name=tool_use,json=toolUse,proto3,oneof"`
}

type AnthropicMessage_Content_ToolResult struct {
	ToolResult *AnthropicMessage_ContentToolResult `protobuf:"bytes,3,opt,name=tool_result,json=toolResult,proto3,oneof"`
}

func (*AnthropicMessage_Content_Text) isAnthropicMessage_Content_Content() {}

func (*AnthropicMessage_Content_ToolUse) isAnthropicMessage_Content_Content() {}

func (*AnthropicMessage_Content_ToolResult) isAnthropicMessage_Content_Content() {}

var File_gitpod_v1_llm_proto protoreflect.FileDescriptor

var file_gitpod_v1_llm_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6c, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x12,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4a, 0x0a, 0x11, 0x61, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x61, 0x6e,
	0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x07,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x6e, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x12, 0x61, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x69, 0x74,
	0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x61, 0x6e, 0x74, 0x68,
	0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xa7, 0x07, 0x0a, 0x10, 0x41, 0x6e, 0x74, 0x68,
	0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0xba, 0x48, 0x07, 0x1a, 0x05, 0x18, 0x80, 0x20, 0x20, 0x00, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0e, 0xba, 0x48,
	0x0b, 0x12, 0x09, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69,
	0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e,
	0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54,
	0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x0b, 0x74, 0x6f,
	0x6f, 0x6c, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68,
	0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x6f,
	0x6c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x6f,
	0x6f, 0x6c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xb7, 0x04, 0x0a, 0x04, 0x54, 0x6f, 0x6f,
	0x6c, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x4f, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x1a, 0x9e, 0x03, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2e, 0xba, 0x48, 0x2b, 0x72, 0x29, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x42, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74,
	0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f,
	0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x6b, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xd6, 0x04, 0x0a, 0x10, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xba, 0x48, 0x1b, 0x72, 0x19, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x52, 0x09, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69,
	0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x21, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x63, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x56, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xee, 0x01, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x47, 0x0a, 0x08, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x75, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x55,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x74, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x0b, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x9b, 0x02, 0x0a, 0x11, 0x41,
	0x6e, 0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1e, 0xba, 0x48, 0x1b, 0x72, 0x19, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x09, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3d,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68,
	0x72, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0x5c, 0x0a, 0x0a, 0x4c, 0x4c, 0x4d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2d, 0x69, 0x6f, 0x2f, 0x67,
	0x69, 0x74, 0x70, 0x6f, 0x64, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitpod_v1_llm_proto_rawDescOnce sync.Once
	file_gitpod_v1_llm_proto_rawDescData = file_gitpod_v1_llm_proto_rawDesc
)

func file_gitpod_v1_llm_proto_rawDescGZIP() []byte {
	file_gitpod_v1_llm_proto_rawDescOnce.Do(func() {
		file_gitpod_v1_llm_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitpod_v1_llm_proto_rawDescData)
	})
	return file_gitpod_v1_llm_proto_rawDescData
}

var file_gitpod_v1_llm_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_gitpod_v1_llm_proto_goTypes = []any{
	(*InvokeModelRequest)(nil),                // 0: gitpod.v1.InvokeModelRequest
	(*InvokeModelResponse)(nil),               // 1: gitpod.v1.InvokeModelResponse
	(*AnthropicRequest)(nil),                  // 2: gitpod.v1.AnthropicRequest
	(*AnthropicMessage)(nil),                  // 3: gitpod.v1.AnthropicMessage
	(*AnthropicResponse)(nil),                 // 4: gitpod.v1.AnthropicResponse
	(*AnthropicRequest_Tool)(nil),             // 5: gitpod.v1.AnthropicRequest.Tool
	nil,                                       // 6: gitpod.v1.AnthropicRequest.ToolChoiceEntry
	(*AnthropicRequest_Tool_InputSchema)(nil), // 7: gitpod.v1.AnthropicRequest.Tool.InputSchema
	nil,                                     // 8: gitpod.v1.AnthropicRequest.Tool.InputSchema.PropertiesEntry
	(*AnthropicMessage_ContentText)(nil),    // 9: gitpod.v1.AnthropicMessage.ContentText
	(*AnthropicMessage_ContentToolUse)(nil), // 10: gitpod.v1.AnthropicMessage.ContentToolUse
	(*AnthropicMessage_ContentToolResult)(nil), // 11: gitpod.v1.AnthropicMessage.ContentToolResult
	(*AnthropicMessage_Content)(nil),           // 12: gitpod.v1.AnthropicMessage.Content
	(*timestamppb.Timestamp)(nil),              // 13: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                    // 14: google.protobuf.Struct
}
var file_gitpod_v1_llm_proto_depIdxs = []int32{
	2,  // 0: gitpod.v1.InvokeModelRequest.anthropic_request:type_name -> gitpod.v1.AnthropicRequest
	4,  // 1: gitpod.v1.InvokeModelResponse.anthropic_response:type_name -> gitpod.v1.AnthropicResponse
	3,  // 2: gitpod.v1.AnthropicRequest.messages:type_name -> gitpod.v1.AnthropicMessage
	5,  // 3: gitpod.v1.AnthropicRequest.tools:type_name -> gitpod.v1.AnthropicRequest.Tool
	6,  // 4: gitpod.v1.AnthropicRequest.tool_choice:type_name -> gitpod.v1.AnthropicRequest.ToolChoiceEntry
	12, // 5: gitpod.v1.AnthropicMessage.content:type_name -> gitpod.v1.AnthropicMessage.Content
	12, // 6: gitpod.v1.AnthropicResponse.content:type_name -> gitpod.v1.AnthropicMessage.Content
	13, // 7: gitpod.v1.AnthropicResponse.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 8: gitpod.v1.AnthropicRequest.Tool.input_schema:type_name -> gitpod.v1.AnthropicRequest.Tool.InputSchema
	8,  // 9: gitpod.v1.AnthropicRequest.Tool.InputSchema.properties:type_name -> gitpod.v1.AnthropicRequest.Tool.InputSchema.PropertiesEntry
	7,  // 10: gitpod.v1.AnthropicRequest.Tool.InputSchema.items:type_name -> gitpod.v1.AnthropicRequest.Tool.InputSchema
	7,  // 11: gitpod.v1.AnthropicRequest.Tool.InputSchema.PropertiesEntry.value:type_name -> gitpod.v1.AnthropicRequest.Tool.InputSchema
	14, // 12: gitpod.v1.AnthropicMessage.ContentToolUse.input:type_name -> google.protobuf.Struct
	9,  // 13: gitpod.v1.AnthropicMessage.Content.text:type_name -> gitpod.v1.AnthropicMessage.ContentText
	10, // 14: gitpod.v1.AnthropicMessage.Content.tool_use:type_name -> gitpod.v1.AnthropicMessage.ContentToolUse
	11, // 15: gitpod.v1.AnthropicMessage.Content.tool_result:type_name -> gitpod.v1.AnthropicMessage.ContentToolResult
	0,  // 16: gitpod.v1.LLMService.InvokeModel:input_type -> gitpod.v1.InvokeModelRequest
	1,  // 17: gitpod.v1.LLMService.InvokeModel:output_type -> gitpod.v1.InvokeModelResponse
	17, // [17:18] is the sub-list for method output_type
	16, // [16:17] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_gitpod_v1_llm_proto_init() }
func file_gitpod_v1_llm_proto_init() {
	if File_gitpod_v1_llm_proto != nil {
		return
	}
	file_gitpod_v1_llm_proto_msgTypes[0].OneofWrappers = []any{
		(*InvokeModelRequest_AnthropicRequest)(nil),
	}
	file_gitpod_v1_llm_proto_msgTypes[1].OneofWrappers = []any{
		(*InvokeModelResponse_AnthropicResponse)(nil),
	}
	file_gitpod_v1_llm_proto_msgTypes[12].OneofWrappers = []any{
		(*AnthropicMessage_Content_Text)(nil),
		(*AnthropicMessage_Content_ToolUse)(nil),
		(*AnthropicMessage_Content_ToolResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitpod_v1_llm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitpod_v1_llm_proto_goTypes,
		DependencyIndexes: file_gitpod_v1_llm_proto_depIdxs,
		MessageInfos:      file_gitpod_v1_llm_proto_msgTypes,
	}.Build()
	File_gitpod_v1_llm_proto = out.File
	file_gitpod_v1_llm_proto_rawDesc = nil
	file_gitpod_v1_llm_proto_goTypes = nil
	file_gitpod_v1_llm_proto_depIdxs = nil
}
