// Code generated by gitpod-log-fields. DO NOT EDIT.

package v1

import (
	logfields "github.com/gitpod-io/flex-sdk-go/tools/logfields"
)

func (x *GetAuthenticatedUserRequest) LogFields() logfields.Collection {
	return nil
}

func (x *GetAuthenticatedUserResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetUser())...)
	return fields
}

func (x *UpdateUserRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "user.id", Value: x.UserId})
	return fields
}

func (x *UpdateUserResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetUser())...)
	return fields
}

func (x *SetSuspendedRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "user.id", Value: x.UserId})
	return fields
}

func (x *SetSuspendedResponse) LogFields() logfields.Collection {
	return nil
}

func (x *User) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "user.id", Value: x.Id})
	fields.Add(&logfields.Entry{Name: "organization.id", Value: x.OrganizationId})
	fields.Add(logfields.Extract(x.GetCreatedAt())...)
	return fields
}

func (x *CreatePersonalAccessTokenRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "user.id", Value: x.UserId})
	fields.Add(logfields.Extract(x.GetValidFor())...)
	return fields
}

func (x *CreatePersonalAccessTokenResponse) LogFields() logfields.Collection {
	return nil
}

func (x *GetPersonalAccessTokenRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "pat.id", Value: x.PersonalAccessTokenId})
	return fields
}

func (x *GetPersonalAccessTokenResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPat())...)
	return fields
}

func (x *ListPersonalAccessTokensRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	fields.Add(logfields.Extract(x.GetFilter())...)
	return fields
}

func (x *ListPersonalAccessTokensResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *DeletePersonalAccessTokenRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "pat.id", Value: x.PersonalAccessTokenId})
	return fields
}

func (x *DeletePersonalAccessTokenResponse) LogFields() logfields.Collection {
	return nil
}

func (x *PersonalAccessToken) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "pat.id", Value: x.Id})
	fields.Add(&logfields.Entry{Name: "user.id", Value: x.UserId})
	fields.Add(logfields.Extract(x.GetCreator())...)
	fields.Add(logfields.Extract(x.GetCreatedAt())...)
	fields.Add(logfields.Extract(x.GetExpiresAt())...)
	fields.Add(logfields.Extract(x.GetLastUsed())...)
	return fields
}

func (x *SetPreferenceRequest) LogFields() logfields.Collection {
	return nil
}

func (x *SetPreferenceResponse) LogFields() logfields.Collection {
	return nil
}

func (x *GetPreferenceRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "userpref.id", Value: x.UserPreferenceId})
	return fields
}

func (x *GetPreferenceResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPreference())...)
	return fields
}

func (x *ListPreferencesRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *ListPreferencesResponse) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(logfields.Extract(x.GetPagination())...)
	return fields
}

func (x *DeletePreferenceRequest) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "userpref.id", Value: x.UserPreferenceId})
	return fields
}

func (x *DeletePreferenceResponse) LogFields() logfields.Collection {
	return nil
}

func (x *UserPreference) LogFields() logfields.Collection {
	if x == nil {
		return nil
	}

	var fields logfields.Collection
	fields.Add(&logfields.Entry{Name: "userpref.id", Value: x.Id})
	fields.Add(logfields.Extract(x.GetCreatedAt())...)
	fields.Add(logfields.Extract(x.GetUpdatedAt())...)
	return fields
}
